<?php
// $Id: popdesc_og.module,v 1.1 2007/12/17 20:09:47 amanuel Exp $
/**
 * @file
 * Module automatically generates a short description from a larger description field you may have created.
  * 
 * @author Amanuel Tewolde 
 * @contact at http://ticklespace.com  & http://drupal.org/user/18769
 * 
 */


/**
 * using hook_menu
 *   
 */
function popdesc_og_menu($may_cache) {
  global $user, $_menu;
  $items = array();

  if ($may_cache) {
    $items[] = array( //adminster which field in the group node type(s) are to be used as the source for the short description
    'path' => 'admin/og/popdesc',
    'title' => t('OG Auto Description Setup'),
    'callback' => 'drupal_get_form',
    'callback arguments' => array('popdesc_og_settings'),
    'access' => user_access('administer site configuration'),
    'description' => t('Automatically generate a short description from a larger description for each Organic Group.'),
    'type' => MENU_NORMAL_ITEM,
    );

  }

  return $items;
} 
/**
 * using hook form_alter
 *   
 */
function popdesc_og_form_alter($form_id, &$form) {
  if((arg(0) == 'node' && arg(1) == 'add' && arg(2)) || (arg(0) == 'node' && is_numeric(arg(1))  && arg(2) == 'edit')) { // check where we are to reduce running our code.
    foreach (variable_get('og_node_types', array('og')) as $type) {
      if($form_id == $type . '_node_form') {
        
        $nodefrm = $form['#node'];
        $autopopsetting = variable_get('popdesc_og_descfield_' . $nodefrm->type, '');
        if($autopopsetting) {
          unset($form['og_description']);
          //$form['og_description'] = array('#type' => 'hidden', '#value' => $nodefrm->og_description ? $nodefrm->og_description : ' ');
        }
       }
    }
  }
}  

function popdesc_og_settings() {

  //drupal_retrieve_form
  $nodefields = content_fields();
  foreach (variable_get('og_node_types', array('og')) as $type) {
    $options = array();
    $options[] = 'no auto-fill';
    foreach ($nodefields as $key => $val) {
      if($val['type_name'] == $type && $val['type']  == 'text') {
        $options[$key] = $val['widget']['label'] . ' field';
      }
    }
    $form['popdesc_og_descfield_' . $type] = array(
      '#type' => 'radios',
      '#title' => t('For <em>' . $type . '</em> content type, auto-fill short description using'),
      '#options' => $options,
      '#default_value' => variable_get('popdesc_og_descfield_' . $type, ''),
      '#description' => t('Select the field from which to populate the short description.'),  
    '#required' => FALSE
    );
  }
  return system_settings_form($form);
}

function popdesc_og_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  if ($op == 'submit') {
      if(og_is_group_type($node->type)) {
        $arrnode = get_object_vars($node);
        $bigdesc = $arrnode[variable_get('popdesc_og_descfield_' . $node->type, 'field_group_description')][0]['value'];
        $bigdesc = strip_html_tags($bigdesc);
        $bigdesc = preg_replace("/[\r|\n]/", " ", $bigdesc);
                
        $shortdesc = truncate_utf8($bigdesc, 128);
        $node->og_description = $shortdesc;
      }
  }
}

/*
 * Code to clean out html stuff, slightly modified.
 * from David Robert Nadeau, Ph.D.'s PHP Tip
 * http://nadeausoftware.com/articles/2007/09/php_tip_how_strip_html_tags_web_page
 * 
 */
function strip_html_tags( $text ) {
    $text = preg_replace(
        array(
          // Remove invisible content
            '@<head[^>]*?>.*?</head>@siu',
            '@<style[^>]*?>.*?</style>@siu',
            '@<script[^>]*?.*?</script>@siu',
            '@<object[^>]*?.*?</object>@siu',
            '@<embed[^>]*?.*?</embed>@siu',
            '@<applet[^>]*?.*?</applet>@siu',
            '@<noframes[^>]*?.*?</noframes>@siu',
            '@<noscript[^>]*?.*?</noscript>@siu',
            '@<noembed[^>]*?.*?</noembed>@siu',
          // Add line breaks before and after blocks
            '@</?((address)|(blockquote)|(center)|(del))@iu',
            '@</?((div)|(h[1-9])|(ins)|(isindex)|(p)|(pre))@iu',
            '@</?((dir)|(dl)|(dt)|(dd)|(li)|(menu)|(ol)|(ul))@iu',
            '@</?((table)|(th)|(td)|(caption))@iu',
            '@</?((form)|(button)|(fieldset)|(legend)|(input))@iu',
            '@</?((label)|(select)|(optgroup)|(option)|(textarea))@iu',
            '@</?((frameset)|(frame)|(iframe))@iu',
        ),
        array(
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            "\$0", "\$0", "\$0", "\$0", "\$0", "\$0",
            "\$0", "\$0",
        ),
        $text );
    return strip_tags( $text );
}